/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.utp.registrodeasistencia.view;

import com.utp.registrodeasistencia.controller.HorarioDaoImple;
import com.utp.registrodeasistencia.interfaces.HorarioDao;
import com.utp.registrodeasistencia.model.Usuario;
import java.sql.Time;
import java.text.SimpleDateFormat;
import java.time.LocalTime;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.util.List;

/**
 *
 * @author Miguel
 */
public class Horario extends javax.swing.JPanel {

    private DefaultTableModel modeloTabla;
    private int indice;
    /**
     * Creates new form
     */
    public Horario() {
        initComponents();
        iniciarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtHoraIni = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtMinIni = new javax.swing.JTextField();
        cbxestado = new javax.swing.JComboBox<>();
        cbxMeridiemIni = new javax.swing.JComboBox<>();
        cbxMeridiemFin = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbxDescripcion = new javax.swing.JTextArea();
        cbxArea = new javax.swing.JComboBox<>();
        txtHoraFin = new javax.swing.JTextField();
        txtMinFin = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbHorario = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel2.setText("Area:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel3.setText("Estado:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel4.setText("Inicio:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel5.setText("Fin:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel6.setText("Descripción:");

        txtHoraIni.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtHoraIni.setPreferredSize(new java.awt.Dimension(59, 27));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel7.setText(":");

        txtMinIni.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtMinIni.setPreferredSize(new java.awt.Dimension(59, 27));

        cbxestado.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbxestado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Inactivo" }));

        cbxMeridiemIni.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AM", "PM" }));

        cbxMeridiemFin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AM", "PM" }));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel14.setText(":");

        tbxDescripcion.setColumns(20);
        tbxDescripcion.setRows(5);
        jScrollPane1.setViewportView(tbxDescripcion);

        cbxArea.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbxArea.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Recursos Humanos", "Administracion", "Finanzas y Contabilidad", "Ventas y Marketing", "Producción o Operaciones", "Tecnología de la Información", "Servicios Jurídicos", "Departamento de Calidad", "Mantenimiento" }));

        txtHoraFin.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtHoraFin.setPreferredSize(new java.awt.Dimension(59, 27));

        txtMinFin.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtMinFin.setPreferredSize(new java.awt.Dimension(59, 27));

        btnGuardar.setBackground(new java.awt.Color(15, 118, 210));
        btnGuardar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnModificar.setBackground(new java.awt.Color(15, 118, 210));
        btnModificar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnModificar.setForeground(new java.awt.Color(255, 255, 255));
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnLimpiar.setBackground(new java.awt.Color(15, 118, 210));
        btnLimpiar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        tbHorario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Estado", "Descripción", "Hora Inicio", "Hora Fin", "Area"
            }
        ));
        tbHorario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbHorarioMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbHorario);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(txtHoraFin, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel14))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(txtHoraIni, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel7)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(txtMinIni, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(cbxMeridiemIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(txtMinFin, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(cbxMeridiemFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cbxArea, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cbxestado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(225, 225, 225)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cbxArea, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cbxestado, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtHoraIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)
                                    .addComponent(txtMinIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel14)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtHoraFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtMinFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cbxMeridiemIni, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxMeridiemFin, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLimpiar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        com.utp.registrodeasistencia.model.Horario horario = new com.utp.registrodeasistencia.model.Horario();
        HorarioDaoImple horarioDao = new HorarioDaoImple();

        int indiceArea = cbxArea.getSelectedIndex();
        int indiceEstado = cbxestado.getSelectedIndex();
        int inidiceMeridianoIni = cbxMeridiemIni.getSelectedIndex();
        int inidiceMeridianoFin = cbxMeridiemFin.getSelectedIndex();
        String area = (String) cbxArea.getItemAt(indiceArea);
        String estadoString = (String) cbxestado.getItemAt(indiceEstado);
        String meridianoIni = (String) cbxMeridiemIni.getItemAt(inidiceMeridianoIni);
        String meridianoFin = (String) cbxMeridiemFin.getItemAt(inidiceMeridianoFin);

        String horaInicioString = txtHoraIni.getText().toString() + ":" + txtMinIni.getText().toString() + " " + meridianoIni;
        String horaFinString = txtHoraFin.getText().toString() + ":" + txtMinFin.getText().toString() + " " + meridianoFin;

        boolean estado = estadoString.equals("Activo") ? Boolean.TRUE : Boolean.FALSE;

        Time horaInicio = horarioDao.obtenerHora(horaInicioString);
        Time horaFin = horarioDao.obtenerHora(horaFinString);

        horario.setEstado(estado);
        horario.setDescripcion(tbxDescripcion.getText().toString());
        horario.setHoraInicio(horaInicio);
        horario.setHoraFin(horaFin);
        horario.setArea(area);

        System.out.println(estado);
        System.out.println(area);
        try {
            horarioDao.registrar(horario);
            JOptionPane.showMessageDialog(null, "Horario Creado", "Horario Creado", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            Logger.getLogger(Horario.class.getName()).log(Level.SEVERE, null, ex);
        }
        limpiar();
        iniciarTabla();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        
        com.utp.registrodeasistencia.model.Horario horario = new com.utp.registrodeasistencia.model.Horario();
        HorarioDaoImple horarioDao = new HorarioDaoImple();

        int indiceArea = cbxArea.getSelectedIndex();
        int indiceEstado = cbxestado.getSelectedIndex();
        int inidiceMeridianoIni = cbxMeridiemIni.getSelectedIndex();
        int inidiceMeridianoFin = cbxMeridiemFin.getSelectedIndex();
        String area = (String) cbxArea.getItemAt(indiceArea);
        String estadoString = (String) cbxestado.getItemAt(indiceEstado);
        String meridianoIni = (String) cbxMeridiemIni.getItemAt(inidiceMeridianoIni);
        String meridianoFin = (String) cbxMeridiemFin.getItemAt(inidiceMeridianoFin);

        String horaInicioString = txtHoraIni.getText().toString() + ":" + txtMinIni.getText().toString() + " " + meridianoIni;
        String horaFinString = txtHoraFin.getText().toString() + ":" + txtMinFin.getText().toString() + " " + meridianoFin;

        boolean estado = estadoString.equals("Activo") ? Boolean.TRUE : Boolean.FALSE;

        Time horaInicio = horarioDao.obtenerHora(horaInicioString);
        Time horaFin = horarioDao.obtenerHora(horaFinString);

        horario.setHorarioId(indice);
        horario.setEstado(estado);
        horario.setDescripcion(tbxDescripcion.getText().toString());
        horario.setHoraInicio(horaInicio);
        horario.setHoraFin(horaFin);
        horario.setArea(area);

        try {
            horarioDao.modificar(horario);
            JOptionPane.showMessageDialog(null, "Horario Actualizado", "Horario Actualizado Correctamente", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            Logger.getLogger(Horario.class.getName()).log(Level.SEVERE, null, ex);
        }
        limpiar();
        iniciarTabla();
    }//GEN-LAST:event_btnModificarActionPerformed

    private void tbHorarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHorarioMouseClicked
        if (tbHorario.getSelectedRow() > -1) {

            int id = Integer.parseInt(tbHorario.getValueAt(tbHorario.getSelectedRow(), 0).toString());
            indice = id;
            HorarioDaoImple horarioDao = new HorarioDaoImple();
            try {                
                com.utp.registrodeasistencia.model.Horario horario = horarioDao.getHorarioById(id);

                String horaInicio = obtenerHora(horario.getHoraInicio());
                String minutosInicio = obtenerMinutos(horario.getHoraInicio());
                String horaFin = obtenerHora(horario.getHoraFin());
                String minutosFin = obtenerMinutos(horario.getHoraFin());
                String meridianoInicio = actualizarAMPM(horario.getHoraInicio().toString());
                String meridianoFin = actualizarAMPM(horario.getHoraFin().toString());
                String estado = horario.isEstado() == true ? "Activo" : "Inactivo";
                String area = horario.getArea();
                String descripcion = horario.getDescripcion();

                txtHoraIni.setText(horaInicio);
                txtMinIni.setText(minutosInicio);
                txtHoraFin.setText(horaFin);
                txtMinFin.setText(minutosFin);
                cbxMeridiemIni.setSelectedItem(meridianoInicio);
                cbxMeridiemFin.setSelectedItem(meridianoFin);
                cbxestado.setSelectedItem(estado);
                cbxArea.setSelectedItem(area);
                tbxDescripcion.setText(descripcion);

            } catch (Exception ex) {
                Logger.getLogger(Horario.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar el horario a eliminar.", "AVISO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tbHorarioMouseClicked
    
    private static String obtenerHora(Time time) {
        Date date = new Date(time.getTime());
        SimpleDateFormat sdf = new SimpleDateFormat("HH");
        return sdf.format(date);
    }

    private static String obtenerMinutos(Time time) {
        Date date = new Date(time.getTime());
        SimpleDateFormat sdf = new SimpleDateFormat("mm");
        return sdf.format(date);
    }

    private String actualizarAMPM(String horaTexto) {
        String respuesta = "AM";
        try {
            // Parsear la hora ingresada
            LocalTime hora = LocalTime.parse(horaTexto);

            // Obtener la parte de la tarde (AM o PM)
            String ampm = hora.getHour() < 12 ? "AM" : "PM";
            respuesta = ampm;

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Formato de hora incorrecto", "Error", JOptionPane.ERROR_MESSAGE);
        }
        return respuesta;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox<String> cbxArea;
    private javax.swing.JComboBox<String> cbxMeridiemFin;
    private javax.swing.JComboBox<String> cbxMeridiemIni;
    private javax.swing.JComboBox<String> cbxestado;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbHorario;
    private javax.swing.JTextArea tbxDescripcion;
    private javax.swing.JTextField txtHoraFin;
    private javax.swing.JTextField txtHoraIni;
    private javax.swing.JTextField txtMinFin;
    private javax.swing.JTextField txtMinIni;
    // End of variables declaration//GEN-END:variables

    private void limpiar() {
        cbxArea.setSelectedIndex(0);
        cbxestado.setSelectedIndex(0);
        cbxMeridiemIni.setSelectedIndex(0);
        cbxMeridiemFin.setSelectedIndex(0);
        txtHoraIni.setText("");
        txtMinIni.setText("");
        txtHoraFin.setText("");
        txtMinFin.setText("");
        tbxDescripcion.setText("");
    }

    public void iniciarTabla() {
        try {
            HorarioDaoImple horarioDao = new HorarioDaoImple();
            DefaultTableModel model = (DefaultTableModel) tbHorario.getModel();
            List<com.utp.registrodeasistencia.model.Horario> lstHorario = horarioDao.listar();

            while (model.getRowCount() > 0) {
                model.removeRow(0);
            }

            for (com.utp.registrodeasistencia.model.Horario horario : lstHorario) {
                model.addRow(
                        new Object[]{
                            horario.getHorarioId(),
                            horario.isEstado() == Boolean.TRUE ? "Activo" : "Inactivo",
                            horario.getDescripcion(),
                            horario.getHoraInicio(),
                            horario.getHoraFin(),
                            horario.getArea()
                        });
            }
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }
}
